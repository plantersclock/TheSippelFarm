# Generated by Django 2.2.3 on 2019-10-10 14:54

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='MixPanel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.CharField(max_length=200)),
                ('content', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Trip',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('budget', models.FloatField(max_length=200)),
                ('start_date', models.DateTimeField(verbose_name='Trip Start Date')),
                ('end_date', models.DateTimeField(verbose_name='Trip End Date')),
                ('notes', models.TextField(blank=True, default=None, max_length=1000, null=True)),
                ('smug_mug', models.CharField(blank=True, default=None, max_length=1000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserSetting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timezone', models.CharField(blank=True, choices=[('Asia/Oral', 'Asia/Oral'), ('Europe/Dublin', 'Europe/Dublin'), ('Etc/GMT+12', 'Etc/GMT+12'), ('America/Dawson_Creek', 'America/Dawson_Creek'), ('America/Nipigon', 'America/Nipigon'), ('Europe/Zurich', 'Europe/Zurich'), ('Pacific/Norfolk', 'Pacific/Norfolk'), ('Asia/Irkutsk', 'Asia/Irkutsk'), ('Australia/Lindeman', 'Australia/Lindeman'), ('Etc/GMT+9', 'Etc/GMT+9'), ('Pacific/Niue', 'Pacific/Niue'), ('Europe/Kiev', 'Europe/Kiev'), ('America/Glace_Bay', 'America/Glace_Bay'), ('America/Jamaica', 'America/Jamaica'), ('America/Port-au-Prince', 'America/Port-au-Prince'), ('Australia/Sydney', 'Australia/Sydney'), ('Europe/Tirane', 'Europe/Tirane'), ('America/Halifax', 'America/Halifax'), ('Antarctica/Davis', 'Antarctica/Davis'), ('Australia/Adelaide', 'Australia/Adelaide'), ('America/Pangnirtung', 'America/Pangnirtung'), ('Asia/Brunei', 'Asia/Brunei'), ('America/Regina', 'America/Regina'), ('Asia/Dhaka', 'Asia/Dhaka'), ('Asia/Sakhalin', 'Asia/Sakhalin'), ('Pacific/Noumea', 'Pacific/Noumea'), ('Asia/Novosibirsk', 'Asia/Novosibirsk'), ('America/Havana', 'America/Havana'), ('Pacific/Palau', 'Pacific/Palau'), ('America/Rankin_Inlet', 'America/Rankin_Inlet'), ('America/Ojinaga', 'America/Ojinaga'), ('America/Vancouver', 'America/Vancouver'), ('Asia/Atyrau', 'Asia/Atyrau'), ('Asia/Magadan', 'Asia/Magadan'), ('Asia/Bishkek', 'Asia/Bishkek'), ('Asia/Kathmandu', 'Asia/Kathmandu'), ('Pacific/Chuuk', 'Pacific/Chuuk'), ('America/Yellowknife', 'America/Yellowknife'), ('Europe/Andorra', 'Europe/Andorra'), ('Etc/GMT-11', 'Etc/GMT-11'), ('Indian/Reunion', 'Indian/Reunion'), ('America/North_Dakota/New_Salem', 'America/North_Dakota/New_Salem'), ('Europe/Belgrade', 'Europe/Belgrade'), ('Etc/GMT+3', 'Etc/GMT+3'), ('Europe/Kaliningrad', 'Europe/Kaliningrad'), ('America/Managua', 'America/Managua'), ('Asia/Tehran', 'Asia/Tehran'), ('Asia/Tbilisi', 'Asia/Tbilisi'), ('Asia/Yakutsk', 'Asia/Yakutsk'), ('America/Indiana/Vincennes', 'America/Indiana/Vincennes'), ('Antarctica/Palmer', 'Antarctica/Palmer'), ('Asia/Ashgabat', 'Asia/Ashgabat'), ('Europe/Rome', 'Europe/Rome'), ('Asia/Hong_Kong', 'Asia/Hong_Kong'), ('America/Eirunepe', 'America/Eirunepe'), ('America/La_Paz', 'America/La_Paz'), ('Australia/Perth', 'Australia/Perth'), ('Antarctica/Syowa', 'Antarctica/Syowa'), ('Asia/Qyzylorda', 'Asia/Qyzylorda'), ('Asia/Yerevan', 'Asia/Yerevan'), ('America/Whitehorse', 'America/Whitehorse'), ('Pacific/Majuro', 'Pacific/Majuro'), ('Europe/Madrid', 'Europe/Madrid'), ('Pacific/Fiji', 'Pacific/Fiji'), ('Etc/GMT+4', 'Etc/GMT+4'), ('America/Noronha', 'America/Noronha'), ('Asia/Hebron', 'Asia/Hebron'), ('Asia/Manila', 'Asia/Manila'), ('Europe/Samara', 'Europe/Samara'), ('Europe/Ulyanovsk', 'Europe/Ulyanovsk'), ('Indian/Mahe', 'Indian/Mahe'), ('Pacific/Efate', 'Pacific/Efate'), ('America/Inuvik', 'America/Inuvik'), ('America/Guatemala', 'America/Guatemala'), ('Europe/Athens', 'Europe/Athens'), ('America/Porto_Velho', 'America/Porto_Velho'), ('Europe/Saratov', 'Europe/Saratov'), ('Pacific/Marquesas', 'Pacific/Marquesas'), ('America/Denver', 'America/Denver'), ('America/Resolute', 'America/Resolute'), ('Atlantic/Azores', 'Atlantic/Azores'), ('Pacific/Pohnpei', 'Pacific/Pohnpei'), ('America/Indiana/Knox', 'America/Indiana/Knox'), ('Indian/Chagos', 'Indian/Chagos'), ('Pacific/Easter', 'Pacific/Easter'), ('Etc/GMT+7', 'Etc/GMT+7'), ('America/Puerto_Rico', 'America/Puerto_Rico'), ('Asia/Taipei', 'Asia/Taipei'), ('Asia/Tomsk', 'Asia/Tomsk'), ('Asia/Kuching', 'Asia/Kuching'), ('Atlantic/Canary', 'Atlantic/Canary'), ('Pacific/Enderbury', 'Pacific/Enderbury'), ('America/North_Dakota/Center', 'America/North_Dakota/Center'), ('Europe/Monaco', 'Europe/Monaco'), ('America/Indiana/Indianapolis', 'America/Indiana/Indianapolis'), ('Asia/Jakarta', 'Asia/Jakarta'), ('Asia/Krasnoyarsk', 'Asia/Krasnoyarsk'), ('Europe/Oslo', 'Europe/Oslo'), ('Pacific/Pitcairn', 'Pacific/Pitcairn'), ('America/New_York', 'America/New_York'), ('Australia/Currie', 'Australia/Currie'), ('Europe/Stockholm', 'Europe/Stockholm'), ('Asia/Kabul', 'Asia/Kabul'), ('America/Maceio', 'America/Maceio'), ('Europe/Prague', 'Europe/Prague'), ('Asia/Chita', 'Asia/Chita'), ('Asia/Urumqi', 'Asia/Urumqi'), ('Asia/Nicosia', 'Asia/Nicosia'), ('Australia/Eucla', 'Australia/Eucla'), ('Australia/Melbourne', 'Australia/Melbourne'), ('Europe/Moscow', 'Europe/Moscow'), ('Europe/Uzhgorod', 'Europe/Uzhgorod'), ('Pacific/Auckland', 'Pacific/Auckland'), ('America/Thule', 'America/Thule'), ('Pacific/Kwajalein', 'Pacific/Kwajalein'), ('Europe/Malta', 'Europe/Malta'), ('America/Santo_Domingo', 'America/Santo_Domingo'), ('Europe/Berlin', 'Europe/Berlin'), ('Asia/Jayapura', 'Asia/Jayapura'), ('Asia/Macau', 'Asia/Macau'), ('Pacific/Funafuti', 'Pacific/Funafuti'), ('Antarctica/Mawson', 'Antarctica/Mawson'), ('Asia/Omsk', 'Asia/Omsk'), ('Etc/GMT-5', 'Etc/GMT-5'), ('America/Moncton', 'America/Moncton'), ('America/El_Salvador', 'America/El_Salvador'), ('Antarctica/DumontDUrville', 'Antarctica/DumontDUrville'), ('Asia/Thimphu', 'Asia/Thimphu'), ('Europe/Lisbon', 'Europe/Lisbon'), ('Pacific/Galapagos', 'Pacific/Galapagos'), ('Asia/Amman', 'Asia/Amman'), ('Europe/Astrakhan', 'Europe/Astrakhan'), ('Pacific/Tarawa', 'Pacific/Tarawa'), ('Pacific/Apia', 'Pacific/Apia'), ('Pacific/Gambier', 'Pacific/Gambier'), ('Asia/Jerusalem', 'Asia/Jerusalem'), ('Europe/Sofia', 'Europe/Sofia'), ('Atlantic/South_Georgia', 'Atlantic/South_Georgia'), ('Pacific/Kosrae', 'Pacific/Kosrae'), ('America/Los_Angeles', 'America/Los_Angeles'), ('Asia/Samarkand', 'Asia/Samarkand'), ('America/Indiana/Winamac', 'America/Indiana/Winamac'), ('Pacific/Chatham', 'Pacific/Chatham'), ('Asia/Hovd', 'Asia/Hovd'), ('Europe/Brussels', 'Europe/Brussels'), ('Pacific/Tahiti', 'Pacific/Tahiti'), ('Etc/GMT-6', 'Etc/GMT-6'), ('America/Panama', 'America/Panama'), ('Asia/Srednekolymsk', 'Asia/Srednekolymsk'), ('Pacific/Kiritimati', 'Pacific/Kiritimati'), ('Europe/Bucharest', 'Europe/Bucharest'), ('America/Scoresbysund', 'America/Scoresbysund'), ('America/Edmonton', 'America/Edmonton'), ('America/Santiago', 'America/Santiago'), ('Etc/GMT+1', 'Etc/GMT+1'), ('Australia/Brisbane', 'Australia/Brisbane'), ('Etc/GMT+10', 'Etc/GMT+10'), ('America/Hermosillo', 'America/Hermosillo'), ('Asia/Qatar', 'Asia/Qatar'), ('Europe/Helsinki', 'Europe/Helsinki'), ('Europe/Copenhagen', 'Europe/Copenhagen'), ('Europe/Zaporozhye', 'Europe/Zaporozhye'), ('Etc/GMT+6', 'Etc/GMT+6'), ('Asia/Ho_Chi_Minh', 'Asia/Ho_Chi_Minh'), ('Indian/Kerguelen', 'Indian/Kerguelen'), ('Etc/GMT-4', 'Etc/GMT-4'), ('Atlantic/Stanley', 'Atlantic/Stanley'), ('America/Recife', 'America/Recife'), ('Etc/GMT-8', 'Etc/GMT-8'), ('Europe/Volgograd', 'Europe/Volgograd'), ('Pacific/Honolulu', 'Pacific/Honolulu'), ('America/Winnipeg', 'America/Winnipeg'), ('Etc/GMT-13', 'Etc/GMT-13'), ('Asia/Shanghai', 'Asia/Shanghai'), ('Europe/London', 'Europe/London'), ('Asia/Baghdad', 'Asia/Baghdad'), ('Europe/Kirov', 'Europe/Kirov'), ('America/Merida', 'America/Merida'), ('Europe/Gibraltar', 'Europe/Gibraltar'), ('America/Santarem', 'America/Santarem'), ('Australia/Darwin', 'Australia/Darwin'), ('Asia/Baku', 'Asia/Baku'), ('America/Rainy_River', 'America/Rainy_River'), ('Asia/Tashkent', 'Asia/Tashkent'), ('Atlantic/Madeira', 'Atlantic/Madeira'), ('America/Indiana/Vevay', 'America/Indiana/Vevay'), ('Etc/GMT+8', 'Etc/GMT+8'), ('Etc/GMT-2', 'Etc/GMT-2'), ('America/Kentucky/Monticello', 'America/Kentucky/Monticello'), ('America/Monterrey', 'America/Monterrey'), ('America/Guayaquil', 'America/Guayaquil'), ('Asia/Dubai', 'Asia/Dubai'), ('Asia/Seoul', 'Asia/Seoul'), ('Asia/Ulaanbaatar', 'Asia/Ulaanbaatar'), ('Pacific/Bougainville', 'Pacific/Bougainville'), ('Pacific/Nauru', 'Pacific/Nauru'), ('Europe/Istanbul', 'Europe/Istanbul'), ('America/Guyana', 'America/Guyana'), ('America/Paramaribo', 'America/Paramaribo'), ('Asia/Barnaul', 'Asia/Barnaul'), ('America/Toronto', 'America/Toronto'), ('Asia/Aqtobe', 'Asia/Aqtobe'), ('Asia/Novokuznetsk', 'Asia/Novokuznetsk'), ('America/Godthab', 'America/Godthab'), ('America/Phoenix', 'America/Phoenix'), ('America/Matamoros', 'America/Matamoros'), ('America/Swift_Current', 'America/Swift_Current'), ('Antarctica/Casey', 'Antarctica/Casey'), ('Europe/Minsk', 'Europe/Minsk'), ('Asia/Makassar', 'Asia/Makassar'), ('Pacific/Guadalcanal', 'Pacific/Guadalcanal'), ('Asia/Aqtau', 'Asia/Aqtau'), ('America/Indiana/Tell_City', 'America/Indiana/Tell_City'), ('Asia/Ust-Nera', 'Asia/Ust-Nera'), ('Indian/Christmas', 'Indian/Christmas'), ('Asia/Kamchatka', 'Asia/Kamchatka'), ('America/Thunder_Bay', 'America/Thunder_Bay'), ('Europe/Paris', 'Europe/Paris'), ('Pacific/Pago_Pago', 'Pacific/Pago_Pago'), ('America/Detroit', 'America/Detroit'), ('America/Fort_Nelson', 'America/Fort_Nelson'), ('America/Martinique', 'America/Martinique'), ('Asia/Anadyr', 'Asia/Anadyr'), ('Etc/GMT-14', 'Etc/GMT-14'), ('Europe/Amsterdam', 'Europe/Amsterdam'), ('Pacific/Tongatapu', 'Pacific/Tongatapu'), ('Asia/Gaza', 'Asia/Gaza'), ('Etc/GMT+5', 'Etc/GMT+5'), ('America/Curacao', 'America/Curacao'), ('America/Sitka', 'America/Sitka'), ('America/Goose_Bay', 'America/Goose_Bay'), ('America/Lima', 'America/Lima'), ('Asia/Yekaterinburg', 'Asia/Yekaterinburg'), ('Etc/GMT+11', 'Etc/GMT+11'), ('Etc/UTC', 'Etc/UTC'), ('America/Yakutat', 'America/Yakutat'), ('Atlantic/Faroe', 'Atlantic/Faroe'), ('Europe/Tallinn', 'Europe/Tallinn'), ('America/Tegucigalpa', 'America/Tegucigalpa'), ('Asia/Almaty', 'Asia/Almaty'), ('Pacific/Wake', 'Pacific/Wake'), ('Asia/Karachi', 'Asia/Karachi'), ('Australia/Hobart', 'Australia/Hobart'), ('America/Menominee', 'America/Menominee'), ('Asia/Riyadh', 'Asia/Riyadh'), ('Etc/GMT+2', 'Etc/GMT+2'), ('Pacific/Guam', 'Pacific/Guam'), ('America/Dawson', 'America/Dawson'), ('Australia/Lord_Howe', 'Australia/Lord_Howe'), ('Indian/Cocos', 'Indian/Cocos'), ('Atlantic/Reykjavik', 'Atlantic/Reykjavik'), ('Asia/Beirut', 'Asia/Beirut'), ('Asia/Choibalsan', 'Asia/Choibalsan'), ('Asia/Pyongyang', 'Asia/Pyongyang'), ('Etc/GMT-10', 'Etc/GMT-10'), ('Indian/Mauritius', 'Indian/Mauritius'), ('Europe/Riga', 'Europe/Riga'), ('Pacific/Fakaofo', 'Pacific/Fakaofo'), ('Antarctica/Rothera', 'Antarctica/Rothera'), ('Indian/Maldives', 'Indian/Maldives'), ('Pacific/Wallis', 'Pacific/Wallis'), ('Europe/Luxembourg', 'Europe/Luxembourg'), ('America/Indiana/Petersburg', 'America/Indiana/Petersburg'), ('Asia/Pontianak', 'Asia/Pontianak'), ('Pacific/Rarotonga', 'Pacific/Rarotonga'), ('America/Mazatlan', 'America/Mazatlan'), ('Asia/Dushanbe', 'Asia/Dushanbe'), ('Europe/Vilnius', 'Europe/Vilnius'), ('Asia/Kolkata', 'Asia/Kolkata'), ('America/St_Johns', 'America/St_Johns'), ('Etc/GMT-3', 'Etc/GMT-3'), ('America/Juneau', 'America/Juneau'), ('America/Miquelon', 'America/Miquelon'), ('America/Tijuana', 'America/Tijuana'), ('Asia/Famagusta', 'Asia/Famagusta'), ('America/Punta_Arenas', 'America/Punta_Arenas'), ('Asia/Khandyga', 'Asia/Khandyga'), ('America/Grand_Turk', 'America/Grand_Turk'), ('Atlantic/Cape_Verde', 'Atlantic/Cape_Verde'), ('Etc/GMT-12', 'Etc/GMT-12'), ('America/Montevideo', 'America/Montevideo'), ('Europe/Vienna', 'Europe/Vienna'), ('America/Metlakatla', 'America/Metlakatla'), ('Europe/Chisinau', 'Europe/Chisinau'), ('America/Indiana/Marengo', 'America/Indiana/Marengo'), ('Antarctica/Macquarie', 'Antarctica/Macquarie'), ('Asia/Kuala_Lumpur', 'Asia/Kuala_Lumpur'), ('Asia/Singapore', 'Asia/Singapore'), ('America/North_Dakota/Beulah', 'America/North_Dakota/Beulah'), ('Europe/Budapest', 'Europe/Budapest'), ('Antarctica/Troll', 'Antarctica/Troll'), ('Asia/Bangkok', 'Asia/Bangkok'), ('Etc/GMT-7', 'Etc/GMT-7'), ('Atlantic/Bermuda', 'Atlantic/Bermuda'), ('America/Sao_Paulo', 'America/Sao_Paulo'), ('Asia/Damascus', 'Asia/Damascus'), ('Asia/Vladivostok', 'Asia/Vladivostok'), ('America/Danmarkshavn', 'America/Danmarkshavn'), ('Europe/Simferopol', 'Europe/Simferopol'), ('Australia/Broken_Hill', 'Australia/Broken_Hill'), ('Etc/GMT', 'Etc/GMT'), ('Etc/GMT-9', 'Etc/GMT-9'), ('Etc/GMT-1', 'Etc/GMT-1'), ('America/Fortaleza', 'America/Fortaleza'), ('Antarctica/Vostok', 'Antarctica/Vostok'), ('America/Kentucky/Louisville', 'America/Kentucky/Louisville'), ('America/Manaus', 'America/Manaus'), ('Europe/Warsaw', 'Europe/Warsaw'), ('America/Iqaluit', 'America/Iqaluit'), ('America/Mexico_City', 'America/Mexico_City'), ('America/Nassau', 'America/Nassau'), ('Pacific/Port_Moresby', 'Pacific/Port_Moresby'), ('America/Rio_Branco', 'America/Rio_Branco'), ('Asia/Dili', 'Asia/Dili'), ('Asia/Tokyo', 'Asia/Tokyo'), ('America/Nome', 'America/Nome'), ('America/Port_of_Spain', 'America/Port_of_Spain'), ('Asia/Colombo', 'Asia/Colombo'), ('Asia/Yangon', 'Asia/Yangon')], default=None, max_length=200)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TripUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('attendee', 'Attendee'), ('viewer', 'Viewer')], max_length=200)),
                ('trip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users', to='mdg.Trip')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TripComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_time', models.DateTimeField(verbose_name='Date/Time')),
                ('lat', models.FloatField(blank=True, default=None, null=True)),
                ('lng', models.FloatField(blank=True, default=None, null=True)),
                ('comment', models.TextField(blank=True, default=None, max_length=1000, null=True)),
                ('trip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mdg.Trip')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Transit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transit_type', models.CharField(choices=[('bus', 'Bus'), ('tour', 'Tour'), ('plane', 'Plane'), ('car', 'Car'), ('train', 'Train')], max_length=200)),
                ('fancyness', models.CharField(choices=[('1', 'Budget'), ('2', 'Standard'), ('3', 'Fancy')], max_length=200, verbose_name='Ticket Type:')),
                ('company', models.CharField(max_length=200)),
                ('transit_number', models.CharField(max_length=200)),
                ('departure_address', models.CharField(max_length=300, verbose_name='Leaving from:')),
                ('departure_date_time', models.DateTimeField(verbose_name='Departure Date/Time')),
                ('arrival_address', models.CharField(blank=True, default=None, max_length=300, null=True, verbose_name='Destination')),
                ('arrival_date_time', models.DateTimeField(blank=True, default=None, null=True, verbose_name='Arrival Date/Time')),
                ('cost', models.FloatField(max_length=200)),
                ('notes', models.TextField(blank=True, default=None, max_length=1000, null=True)),
                ('departure_json', models.TextField(blank=True, default=None, null=True)),
                ('departure_lat', models.FloatField(blank=True, default=None, null=True)),
                ('departure_lng', models.FloatField(blank=True, default=None, null=True)),
                ('arrival_json', models.TextField(blank=True, default=None, null=True)),
                ('arrival_lat', models.FloatField(blank=True, default=None, null=True)),
                ('arrival_lng', models.FloatField(blank=True, default=None, null=True)),
                ('trip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mdg.Trip')),
            ],
        ),
        migrations.CreateModel(
            name='Stay',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('stay_type', models.CharField(choices=[('friend', "Friend's Place"), ('airbnb', 'Airbnb'), ('hotel', 'Hotel'), ('hostel', 'Hostel')], max_length=200)),
                ('fancyness', models.CharField(choices=[('1', 'Budget'), ('2', 'Standard'), ('3', 'Fancy')], max_length=200, verbose_name='Booking Level:')),
                ('host_info', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('address', models.CharField(max_length=300, verbose_name='Address:')),
                ('check_in', models.DateTimeField(verbose_name='check_in')),
                ('check_out', models.DateTimeField(verbose_name='check_out')),
                ('cost', models.FloatField(max_length=200)),
                ('notes', models.TextField(blank=True, default=None, max_length=1000, null=True)),
                ('json', models.TextField(blank=True, default=None, null=True)),
                ('lat', models.FloatField(blank=True, default=None, null=True)),
                ('lng', models.FloatField(blank=True, default=None, null=True)),
                ('trip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mdg.Trip')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_type', models.CharField(max_length=200)),
                ('item_id', models.IntegerField()),
                ('date_time', models.DateTimeField(verbose_name='Date/Time')),
                ('rating', models.CharField(choices=[('1', 'Terrible'), ('2', 'Bad'), ('3', 'Fine'), ('4', 'Good'), ('5', 'Amazing')], max_length=200)),
                ('review', models.TextField(blank=True, default=None, max_length=1000, null=True)),
                ('is_touristy', models.BooleanField(default=False, verbose_name='Touristy?')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Misc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('address', models.CharField(max_length=300, verbose_name='Address')),
                ('start_date_time', models.DateTimeField(verbose_name='Start Date/Time')),
                ('misc_type', models.CharField(choices=[('entertainment', 'Entertainment'), ('other', 'Other')], max_length=200)),
                ('fancyness', models.CharField(choices=[('1', 'Budget'), ('2', 'Standard'), ('3', 'Fancy')], max_length=200, verbose_name='How Fancy/Ticket Type:')),
                ('cost', models.FloatField(max_length=200)),
                ('notes', models.TextField(blank=True, default=None, max_length=1000)),
                ('json', models.TextField(blank=True, default=None, null=True)),
                ('lat', models.FloatField(blank=True, default=None, null=True)),
                ('lng', models.FloatField(blank=True, default=None, null=True)),
                ('trip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mdg.Trip')),
            ],
        ),
        migrations.CreateModel(
            name='Meal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meal_type', models.CharField(choices=[('dinner', 'Dinner'), ('drinks', 'Drinks'), ('lunch', 'Lunch'), ('breakfast', 'Breakfast'), ('snack', 'Snack')], max_length=200)),
                ('fancyness', models.CharField(choices=[('1', 'Budget'), ('2', 'Standard'), ('3', 'Fancy')], max_length=200, verbose_name='How Fancy:')),
                ('name', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('address', models.CharField(max_length=300, verbose_name='Address')),
                ('date_time', models.DateTimeField(verbose_name='Date/Time')),
                ('cost', models.FloatField(max_length=200)),
                ('notes', models.TextField(blank=True, default=None, max_length=1000, null=True)),
                ('json', models.TextField(blank=True, default=None, null=True)),
                ('lat', models.FloatField(blank=True, default=None, null=True)),
                ('lng', models.FloatField(blank=True, default=None, null=True)),
                ('trip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mdg.Trip')),
            ],
        ),
    ]
